docker image ls
docker container ls
docker container ls -a
docker volume ls
docker network ls



echo "Hello World" 
docker run  busybox echo "Hello World"
docker run -it ubuntu:latest each "Hello World"
docker run -it ubuntu:latest cat /etc/lsb-release
docker run -it ubuntu:latest bash
	cat /etc/lsb-release
	echo "Hello World"
	exit

docker run -it centos:latest each "Hello World"
docker run -it centos:latest cat /etc/centos-release
docker run -ti centos:latest bash
	cat /etc/centos-release
	echo "Hello World"
	exit

docker run -it busybox sh
	busybox
	busybox | head -n 10
 	busybox | grep ping

docker run -it ubuntu:latest ping 8.8.8.8
docker run -it centos:latest ping 8.8.8.8
docker run -it busybox ping 8.8.8.8

docker run -it ubuntu:latest bash
	apt update
	apt install iputils-ping
	ping 8.8.8.8
	exit

docker run -it ubuntu:latest ping 8.8.8.8  //???

PS C:\Users\mkbah> docker container ls -a
CONTAINER ID   IMAGE             COMMAND                  CREATED             STATUS                         PORTS                     NAMES
c61fd94c8b29   ubuntu:latest     "ping 8.8.8.8"           18 seconds ago      Created                                                  modest_swirles
e9e99be2481c   ubuntu:latest     "bash"                   9 minutes ago       Exited (137) 2 minutes ago                               eager_mcnulty
e77a1c2e883e   busybox:latest    "ping 8.8.8.8"           10 minutes ago      Exited (0) 10 minutes ago                                friendly_nightingale

docker run -it e9e99be2481c bash	//???

+docker exec -it e9e99be2481c bash bash 	//???
+docker start e9e99be2481c
docker exec e9e99be2481c ping 8.8.8.8

docker commit e9e99be2481c mkbahk/ubuntuwithping
docker save mkbahk/ubuntuwithping:latest -o ubuntuwithping.docker.image

PS C:\Users\mkbah> docker container ls -a
CONTAINER ID   IMAGE                          COMMAND                  CREATED             STATUS                      PORTS                     NAMES
633a6c56dbc5   mkbahk/ubuntuwithping:latest   "ping 8.8.8.8"           21 seconds ago      Exited (0) 16 seconds ago                             inspiring_volhard



docker system prune -a

docker load -i .\ubuntuwithping.docker.image
docker run -it mkbahk/ubuntuwithping:latest ping 8.8.8.8
docker rm 633a6c56dbc5
docker container ls

docker image ls

PS C:\Users\mkbah> docker image ls
REPOSITORY              TAG         IMAGE ID       CREATED          SIZE
mkbahk/ubuntuwithping   latest    4766280c184f   12 minutes ago   113MB
postgres                latest    5b21e2e86aab   6 days ago       376MB

docker rmi mkbahk/ubuntuwithping:latest


docker tag mkbahk/ubuntuwithping:latest docker.io/mkbahk/ubuntuwithping:1.9
docker login   //dockerhub.com 에 로그인해야 함. ]
docker push mkbahk/ubuntuwithping:latest
//dockerhub.com 의 자신의 ID에서 리스트 확인
docker pull mkbahk/ubuntuwithping:latest
docker run -it mkbahk/ubuntuwithping:latest ping 8.8.8.8
Ctrl-c

docker run mkbahk/ubuntuwithping:latest ping 8.8.8.8
Ctrl-c  // stop이 불가

docker run hello-world
docker image lsPS C:\Users\mkbah> docker container ls
CONTAINER ID   IMAGE                          COMMAND                  CREATED          STATUS          PORTS                     NAMES
2a6dd1553358   mkbahk/ubuntuwithping:latest   "ping 8.8.8.8"           49 seconds ago   Up 48 seconds                             friendly_antonelli
5d30aff0cc02   postgres:latest                "docker-entrypoint.s…"   2 hours ago      Up 2 hours      0.0.0.0:49153->5432/tcp   postgres-Hr9o
PS C:\Users\mkbah> docker stop 2a6dd1553358
2a6dd1553358

//이미지가 없으면 로컬시스템repository에서 찻고, 없으면 Local Repository, 없으면 Public Repository(dockerhub.com)에서 찾아서, 다운로드하고, 실행시키는 명령
docker run -it mkbahk/ubuntuwithping:latest ping 8.8.8.8





//postgresql 설치

docker run -d -p 49153:5432 postgres:latest 
psql -h localhost -U postgres -w

외부에서 DBeaver를 통해서 접속합니다.
Connection String: postgres://postgres:postgrespw@localhost:49153



//mysql 설치 및 서비스 수행, 암호없이 접속 + wordpress 설치 및 mysql와 연결
docker run -p 3306(바깥쪽):3306(안쪽) --name mysql -d mysql:
docker container ps

PS C:\Users\mkbah> docker container ls
CONTAINER ID   IMAGE             COMMAND                  CREATED          STATUS          PORTS                               NAMES
c9eff902ddbb   mysql:latest      "docker-entrypoint.s…"   21 minutes ago   Up 21 minutes   0.0.0.0:3306->3306/tcp, 33060/tcp   mysql
5d30aff0cc02   postgres:latest   "docker-entrypoint.s…"   5 hours ago      Up 5 hours      0.0.0.0:49153->5432/tcp             postgres-Hr9o
PS C:\Users\mkbah>

docker logs c9eff902ddbb

docker run -d -p 3306:3306 -e MYSQL_ALLOW_EMPTY_PASSWORD=true --name mysql mysql:latest
docker exec -it mysql bash
	mysql -u root -p
	Enter  //password가 없습니다.
	show databases;
	use mysql;
	show tables;
	select * from user;
	exit
	exit

//wordpress를 위한 mysql 설치
docker run -d --name mysql -v mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=wordpress -e MYSQL_DATABASE=wordpress -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=wordpress mysql:5.7


//wordpress 설치 및 mysql 연결
docker run -d --name wordpress --link mysql:mysql -v wordpress:/var/www/html -e WORDPRESS_DB_HOST=mysql:3306 -e WORDPRESS_DB_USER=wordpress -e WORDPRESS_DB_PASSWORD=wordpress -p 8989:80 wordpress:latest




	
//파일 Upload, Download
//host -> Container
docker cp .\dvdrental.zip postgres-Hr9o:/dvdrental.zip
docker cp .\dvdrental.zip postgres-Hr9o:/tmp/dvdrental.zip

docker exec -it postgres-Hr9o bash
	cd /tmp
	ls -al

//container -> host 
docker cp postgres-Hr9o:/tmp/dvdrental.zip   .\dvdrental-co.zip 
dir



docker compsor
docker swam








